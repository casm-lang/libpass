#
#   Copyright (C) 2015-2022 CASM Organization <https://casm-lang.org>
#   All rights reserved.
#
#   Developed by: Philipp Paulweber et al.
#                 <https://github.com/casm-lang/libpass/graphs/contributors>
#
#   This file is part of libpass.
#
#   libpass is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   libpass is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with libpass. If not, see <http://www.gnu.org/licenses/>.
#
#   Additional permission under GNU GPL version 3 section 7
#
#   libpass is distributed under the terms of the GNU General Public License
#   with the following clarification and special exception: Linking libpass
#   statically or dynamically with other modules is making a combined work
#   based on libpass. Thus, the terms and conditions of the GNU General
#   Public License cover the whole combination. As a special exception,
#   the copyright holders of libpass give you permission to link libpass
#   with independent modules to produce an executable, regardless of the
#   license terms of these independent modules, and to copy and distribute
#   the resulting executable under terms of your choice, provided that you
#   also meet, for each linked independent module, the terms and conditions
#   of the license of that module. An independent module is a module which
#   is not derived from or based on libpass. If you modify libpass, you
#   may extend this exception to your version of the library, but you are
#   not obliged to do so. If you do not wish to do so, delete this exception
#   statement from your version.
#

# https://help.github.com/en/articles/virtual-environments-for-github-actions

name: build

on: [push]

jobs:
  # https://github.com/actions/virtual-environments/blob/main/images/linux
  linux-x86_64:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        tool:
        - build: debug
          chain: clang-11
        - build: coverage
          chain: gcc-10
        - build: debug
          chain: emcc
    env:
      B: ${{ matrix.tool.build }}
      C: ${{ matrix.tool.chain }}
      G: ninja
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Install
      uses: mymindstorm/setup-emsdk@v11
      if:   matrix.tool.chain == 'emcc'
      with:
        version: 3.1.2
        actions-cache-folder: '.attic/emsdk'
    - name: Setup
      run: |
        make info
        sudo apt-get update
        sudo apt-get install -y ninja-build
        sudo apt-get install -y libz3-dev
        make ci-tools
    - name: Fetching
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      run: |
        make ci-fetch
    - name: Dependencies
      run: |
        make ci-deps
    - name: Building
      run: |
        make ci-build
    - name: Tests
      run: |
        make ci-test
    - name: Benchmark
      run: |
        make ci-benchmark
    - name: Coverage
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      if: matrix.tool.build == 'coverage'
      run: |
        wget https://codecov.io/bash
        chmod 755 bash
        ./bash

  # https://github.com/actions/virtual-environments/blob/main/images/macos
  darwin-x86_64:
    runs-on: macos-10.15
    strategy:
      matrix:
        tool:
        - build: debug
          chain: gcc-11
    env:
      B: ${{ matrix.tool.build }}
      C: ${{ matrix.tool.chain }}
      G: ninja
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Setup
      run: |
        make info
        brew install ninja
        brew install z3
        make ci-tools
    - name: Fetching
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      run: |
        make ci-fetch
    - name: Dependencies
      run: |
        make ci-deps
    - name: Building
      run: |
        make ci-build
    - name: Tests
      run: |
        make ci-test
    - name: Benchmark
      run: |
        make ci-benchmark

  # https://github.com/actions/virtual-environments/blob/main/images/win
  windows-x86_64:
    runs-on: windows-2019
    strategy:
      matrix:
        tool:
        - build: debug
          chain: clang-12
    env:
      B: ${{ matrix.tool.build }}
      C: clang # ${{ matrix.tool.chain }}
      G: ninja
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Setup
      run: |
        make info
        echo "C:\msys64\mingw64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        choco install ninja
        make ci-tools
    - name: Install
      uses: ppaulweber/github-action-setup-z3@bug/url_fix
      with:
        version: 4.8.10
        architecture: x64-win
    - name: Fetching
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      run: |
        make ci-fetch
    - name: Dependencies
      run: |
        make ci-deps
    - name: Building
      run: |
        make ci-build
    - name: Tests
      run: |
        make ci-test
    - name: Benchmark
      run: |
        make ci-benchmark
